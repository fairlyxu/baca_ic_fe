{"remainingRequest":"/Users/fairlyxu/Documents/08-workspace/03-out/denews/baca_app/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/fairlyxu/Documents/08-workspace/03-out/denews/baca_app/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/fairlyxu/Documents/08-workspace/03-out/denews/baca_app/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/fairlyxu/Documents/08-workspace/03-out/denews/baca_app/src/views/home/index.vue?vue&type=template&id=5954443c&scoped=true&","dependencies":[{"path":"/Users/fairlyxu/Documents/08-workspace/03-out/denews/baca_app/src/views/home/index.vue","mtime":1639492569000},{"path":"/Users/fairlyxu/Documents/08-workspace/03-out/denews/baca_app/node_modules/cache-loader/dist/cjs.js","mtime":1638964486000},{"path":"/Users/fairlyxu/Documents/08-workspace/03-out/denews/baca_app/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1638964568000},{"path":"/Users/fairlyxu/Documents/08-workspace/03-out/denews/baca_app/node_modules/cache-loader/dist/cjs.js","mtime":1638964486000},{"path":"/Users/fairlyxu/Documents/08-workspace/03-out/denews/baca_app/node_modules/vue-loader/lib/index.js","mtime":1638964568000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}