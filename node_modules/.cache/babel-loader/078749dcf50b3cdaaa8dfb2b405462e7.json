{"remainingRequest":"/Users/fairlyxu/Documents/08-workspace/07-web3/denews/baca_app/node_modules/thread-loader/dist/cjs.js!/Users/fairlyxu/Documents/08-workspace/07-web3/denews/baca_app/node_modules/babel-loader/lib/index.js!/Users/fairlyxu/Documents/08-workspace/07-web3/denews/baca_app/src/utils/handleStake.js","dependencies":[{"path":"/Users/fairlyxu/Documents/08-workspace/07-web3/denews/baca_app/src/utils/handleStake.js","mtime":1639283730000},{"path":"/Users/fairlyxu/Documents/08-workspace/07-web3/denews/baca_app/babel.config.js","mtime":1639051781000},{"path":"/Users/fairlyxu/Documents/08-workspace/07-web3/denews/baca_app/node_modules/cache-loader/dist/cjs.js","mtime":1638964486000},{"path":"/Users/fairlyxu/Documents/08-workspace/07-web3/denews/baca_app/node_modules/thread-loader/dist/cjs.js","mtime":1638964486000},{"path":"/Users/fairlyxu/Documents/08-workspace/07-web3/denews/baca_app/node_modules/babel-loader/lib/index.js","mtime":1638964486000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9mYWlybHl4dS9Eb2N1bWVudHMvMDgtd29ya3NwYWNlLzA3LXdlYjMvZGVuZXdzL2JhY2FfYXBwL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yLmpzIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5qc29uLnN0cmluZ2lmeS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiOwppbXBvcnQgeyBBcGlQcm9taXNlLCBXc1Byb3ZpZGVyIH0gZnJvbSAnQHBvbGthZG90L2FwaSc7CmltcG9ydCB7IHdlYjNBY2NvdW50cywgd2ViM0VuYWJsZSwgd2ViM0Zyb21Tb3VyY2UsIHdlYjNGcm9tQWRkcmVzcyB9IGZyb20gJ0Bwb2xrYWRvdC9leHRlbnNpb24tZGFwcCc7CnZhciBhd3NDaGFpbkFkZHIgPSAnd3M6Ly9lYzItMzUtNzctMTQtNjQuYXAtbm9ydGhlYXN0LTEuY29tcHV0ZS5hbWF6b25hd3MuY29tOjk5NDQnOwp2YXIgbG9jYWxDaGFpbkFkZHIgPSAnd3M6Ly8xMjcuMC4wLjE6OTk0NCc7CnZhciBhd3NCYWNrZW5kID0gJ2h0dHA6Ly9lYzItMzUtNzctMTQtNjQuYXAtbm9ydGhlYXN0LTEuY29tcHV0ZS5hbWF6b25hd3MuY29tOjMwMDAnOwp2YXIgbG9jYWxCYWNrZW5kID0gJ2h0dHA6Ly8xMjcuMC4wLjE6MzAwMCc7CnZhciBhZG1pbkFkZHIgPSAnNUVSYTFTUmN4emlWYkJXYnhSVnRzNm56enJSNHlDVUxwUXVnRGhYUXVRanJlV0ZDJzsKdmFyIGFjdGluZ0FkZHJlc3MgPSBhd3NDaGFpbkFkZHI7CnZhciB1bml0ID0gMTAwMDAwMDAwMDAwMDAwOwp2YXIgdGVzdF9hZGRyID0gIjVIQ0VBVVpGdkt5czk4ZFlhb05ETFJXRHpxaDhXS29nemNKM1dFUzdvR3h5N25mVCI7CgpmdW5jdGlvbiBzdGFrZVJlc3VsdEhhbmRsZXIoc3RhdHVzKSB7CiAgY29uc29sZS5sb2coc3RhdHVzKTsKICByZXR1cm4gIiI7Cn0gLy90cmFuc2ZlcgoKCmZ1bmN0aW9uIGhhbmRsZVN0YWtlKF94KSB7CiAgcmV0dXJuIF9oYW5kbGVTdGFrZS5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwp9CgpmdW5jdGlvbiBfaGFuZGxlU3Rha2UoKSB7CiAgX2hhbmRsZVN0YWtlID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKHBhcmFtcykgewogICAgdmFyIGJhbCwgYW1tb3VudCwgU0VOREVSLCB3c1Byb3ZpZGVyLCBhcGksIGV4dGVuc2lvbnMsIGluamVjdG9yLCB0eEhhc2g7CiAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgd2hpbGUgKDEpIHsKICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgIGJhbCA9IHBhcmFtcy53YWxsZXRfaWQ7CiAgICAgICAgICAgIGFtbW91bnQgPSBwYXJhbXMuc3Rha2VfYW1tb3VudDsgLy8xCgogICAgICAgICAgICBTRU5ERVIgPSBiYWw7IC8vIGZpbmRzIGFuIGluamVjdG9yIGZvciBhbiBhZGRyZXNzCgogICAgICAgICAgICB3c1Byb3ZpZGVyID0gbmV3IFdzUHJvdmlkZXIoYWN0aW5nQWRkcmVzcyk7CiAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA2OwogICAgICAgICAgICByZXR1cm4gQXBpUHJvbWlzZS5jcmVhdGUoewogICAgICAgICAgICAgIHByb3ZpZGVyOiB3c1Byb3ZpZGVyCiAgICAgICAgICAgIH0pOwoKICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgICAgYXBpID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDk7CiAgICAgICAgICAgIHJldHVybiB3ZWIzRW5hYmxlKCdCQUNBJyk7CgogICAgICAgICAgY2FzZSA5OgogICAgICAgICAgICBleHRlbnNpb25zID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDEyOwogICAgICAgICAgICByZXR1cm4gd2ViM0Zyb21BZGRyZXNzKFNFTkRFUik7CgogICAgICAgICAgY2FzZSAxMjoKICAgICAgICAgICAgaW5qZWN0b3IgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTU7CiAgICAgICAgICAgIHJldHVybiBhcGkudHguYmFsYW5jZXMudHJhbnNmZXIoYWRtaW5BZGRyLCBhbW1vdW50KS5zaWduQW5kU2VuZChTRU5ERVIsIHsKICAgICAgICAgICAgICBzaWduZXI6IGluamVjdG9yLnNpZ25lcgogICAgICAgICAgICB9KTsKCiAgICAgICAgICBjYXNlIDE1OgogICAgICAgICAgICB0eEhhc2ggPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAvLyBTaG93IHRoZSBoYXNoCiAgICAgICAgICAgIGNvbnNvbGUubG9nKCJTdWJtaXR0ZWQgd2l0aCBoYXNoICIuY29uY2F0KHR4SGFzaCkpOwogICAgICAgICAgICAvKgogICAgICAgICAgICAvLyB1bmJsb2NrIAogICAgICAgICAgICBhcGkudHguYmFsYW5jZXMKICAgICAgICAgICAgIC50cmFuc2ZlcihhZG1pbkFkZHIsICBhbW1vdW50KQogICAgICAgICAgICAgLnNpZ25BbmRTZW5kKFNFTkRFUix7IHNpZ25lcjogaW5qZWN0b3Iuc2lnbmVyIH0pOyAKICAgICAgICAgICAgLy8gc2V0VW5zdWIoKCkgPT4gdW5zdWIpOyovCgogICAgICAgICAgY2FzZSAxNzoKICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgfQogICAgICB9CiAgICB9LCBfY2FsbGVlKTsKICB9KSk7CiAgcmV0dXJuIF9oYW5kbGVTdGFrZS5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwp9CgpmdW5jdGlvbiBnZXRSZXdhcmQoKSB7CiAgdmFyIHJiID0gSlNPTi5zdHJpbmdpZnkoewogICAgImFkZHIiOiB0ZXN0X2FkZHIKICB9KTsKICB2YXIgYmFja2VuZGFwaSA9IGF3c0JhY2tlbmQ7CiAgdmFyIHVybCA9ICIiLmNvbmNhdChiYWNrZW5kYXBpLCAiL2FwaS9nZXRfcmV3YXJkIik7CiAgY29uc29sZS5sb2codXJsKTsKICBmZXRjaCh1cmwsIHsKICAgIGJvZHk6IHJiLAogICAgaGVhZGVyczogewogICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nCiAgICB9LAogICAgbWV0aG9kOiAnUE9TVCcKICB9KS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgcmV0dXJuIHJlc3BvbnNlLmpzb24oKTsKICB9KS50aGVuKGZ1bmN0aW9uIChhKSB7CiAgICByZXR1cm4gY29uc29sZS5sb2coYSk7CiAgfSk7Cn0gLy9nZXRSZXdhcmQoKQoKCmV4cG9ydCBkZWZhdWx0IGhhbmRsZVN0YWtlID0gaGFuZGxlU3Rha2U7"},{"version":3,"sources":["/Users/fairlyxu/Documents/08-workspace/07-web3/denews/baca_app/src/utils/handleStake.js"],"names":["ApiPromise","WsProvider","web3Accounts","web3Enable","web3FromSource","web3FromAddress","awsChainAddr","localChainAddr","awsBackend","localBackend","adminAddr","actingAddress","unit","test_addr","stakeResultHandler","status","console","log","handleStake","params","bal","wallet_id","ammount","stake_ammount","SENDER","wsProvider","create","provider","api","extensions","injector","tx","balances","transfer","signAndSend","signer","txHash","getReward","rb","JSON","stringify","backendapi","url","fetch","body","headers","method","then","response","json","a"],"mappings":";;;;AAAA,SAASA,UAAT,EAAqBC,UAArB,QAAuC,eAAvC;AACA,SAASC,YAAT,EAAuBC,UAAvB,EAAmCC,cAAnC,EAAmDC,eAAnD,QAA0E,0BAA1E;AAEA,IAAMC,YAAY,GAAG,gEAArB;AACA,IAAMC,cAAc,GAAG,qBAAvB;AACA,IAAMC,UAAU,GAAG,kEAAnB;AACA,IAAMC,YAAY,GAAG,uBAArB;AACA,IAAMC,SAAS,GAAG,kDAAlB;AAGA,IAAMC,aAAa,GAAGL,YAAtB;AACA,IAAMM,IAAI,GAAG,eAAb;AACA,IAAMC,SAAS,GAAG,kDAAlB;;AAIA,SAASC,kBAAT,CAA4BC,MAA5B,EAAmC;AAC/BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,SAAO,EAAP;AACH,C,CAED;;;SACeG,W;;;;;yEAAf,iBAA2BC,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AACQC,YAAAA,GADR,GACcD,MAAM,CAACE,SADrB;AAGQC,YAAAA,OAHR,GAGmBH,MAAM,CAACI,aAH1B,EAGyC;;AAC/BC,YAAAA,MAJV,GAImBJ,GAJnB,EAMI;;AACMK,YAAAA,UAPV,GAOuB,IAAIxB,UAAJ,CAAeU,aAAf,CAPvB;AAAA;AAAA,mBAQsBX,UAAU,CAAC0B,MAAX,CAAkB;AAAEC,cAAAA,QAAQ,EAAEF;AAAZ,aAAlB,CARtB;;AAAA;AAQUG,YAAAA,GARV;AAAA;AAAA,mBAU6BzB,UAAU,CAAC,MAAD,CAVvC;;AAAA;AAUU0B,YAAAA,UAVV;AAAA;AAAA,mBAW2BxB,eAAe,CAACmB,MAAD,CAX1C;;AAAA;AAWUM,YAAAA,QAXV;AAAA;AAAA,mBAeyBF,GAAG,CAACG,EAAJ,CAAOC,QAAP,CAClBC,QADkB,CACTvB,SADS,EACGY,OADH,EAElBY,WAFkB,CAENV,MAFM,EAEC;AAAEW,cAAAA,MAAM,EAAEL,QAAQ,CAACK;AAAnB,aAFD,CAfzB;;AAAA;AAeUC,YAAAA,MAfV;AAmBI;AACApB,YAAAA,OAAO,CAACC,GAAR,+BAAmCmB,MAAnC;AAEC;AACL;AACA;AACA;AACA;AACA;;AA3BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AA+BA,SAASC,SAAT,GAAqB;AACjB,MAAIC,EAAE,GAAGC,IAAI,CAACC,SAAL,CAAe;AAAE,YAAQ3B;AAAV,GAAf,CAAT;AACA,MAAI4B,UAAU,GAAGjC,UAAjB;AACA,MAAMkC,GAAG,aAAMD,UAAN,oBAAT;AACAzB,EAAAA,OAAO,CAACC,GAAR,CAAYyB,GAAZ;AACAC,EAAAA,KAAK,CAACD,GAAD,EAAM;AACHE,IAAAA,IAAI,EAAEN,EADH;AAEHO,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX,KAFN;AAKHC,IAAAA,MAAM,EAAE;AALL,GAAN,CAAL,CAOKC,IAPL,CAOU,UAACC,QAAD;AAAA,WAAcA,QAAQ,CAACC,IAAT,EAAd;AAAA,GAPV,EAQKF,IARL,CAQU,UAAAG,CAAC;AAAA,WAAIlC,OAAO,CAACC,GAAR,CAAYiC,CAAZ,CAAJ;AAAA,GARX;AASH,C,CAED;;;AAIA,eAAehC,WAAW,GAACA,WAA3B","sourcesContent":["import { ApiPromise, WsProvider } from '@polkadot/api';\nimport { web3Accounts, web3Enable, web3FromSource, web3FromAddress } from '@polkadot/extension-dapp';\n\nconst awsChainAddr = 'ws://ec2-35-77-14-64.ap-northeast-1.compute.amazonaws.com:9944'\nconst localChainAddr = 'ws://127.0.0.1:9944'\nconst awsBackend = 'http://ec2-35-77-14-64.ap-northeast-1.compute.amazonaws.com:3000'\nconst localBackend = 'http://127.0.0.1:3000'\nconst adminAddr = '5ERa1SRcxziVbBWbxRVts6nzzrR4yCULpQugDhXQuQjreWFC'\n\n\nconst actingAddress = awsChainAddr\nconst unit = 100000000000000;\nconst test_addr = \"5HCEAUZFvKys98dYaoNDLRWDzqh8WKogzcJ3WES7oGxy7nfT\" \n\n \n\nfunction stakeResultHandler(status){\n    console.log(status)\n    return \"\"\n}\n\n//transfer\nasync function handleStake(params) {\n    let bal = params.wallet_id\n    \n    let ammount =  params.stake_ammount  //1\n    const SENDER = bal; \n\n    // finds an injector for an address\n    const wsProvider = new WsProvider(actingAddress); \n    const api = await ApiPromise.create({ provider: wsProvider });\n    \n    const extensions = await web3Enable('BACA'); \n    const injector = await web3FromAddress(SENDER); \n\n     \n    // block \n    const txHash = await api.tx.balances\n      .transfer(adminAddr,  ammount)\n      .signAndSend(SENDER,{ signer: injector.signer });\n\n    // Show the hash\n    console.log(`Submitted with hash ${txHash}`); \n\n     /*\n     // unblock \n    api.tx.balances\n      .transfer(adminAddr,  ammount)\n      .signAndSend(SENDER,{ signer: injector.signer }); \n\n    // setUnsub(() => unsub);*/\n} \n\nfunction getReward() {  \n    let rb = JSON.stringify({ \"addr\": test_addr })\n    let backendapi = awsBackend\n    const url = `${backendapi}/api/get_reward`\n    console.log(url)\n    fetch(url, {\n            body: rb,\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            method: 'POST',\n        })\n        .then((response) => response.json())\n        .then(a => console.log(a))\n}\n\n//getReward()\n\n \n \nexport default handleStake=handleStake;\n\n\n"]}]}