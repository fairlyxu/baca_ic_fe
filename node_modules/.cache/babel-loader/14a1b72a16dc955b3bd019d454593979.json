{"remainingRequest":"/Users/fairlyxu/Documents/08-workspace/03-out/denews/baca_app/node_modules/babel-loader/lib/index.js!/Users/fairlyxu/Documents/08-workspace/03-out/denews/baca_app/src/utils/handleStake.js","dependencies":[{"path":"/Users/fairlyxu/Documents/08-workspace/03-out/denews/baca_app/src/utils/handleStake.js","mtime":1639283730000},{"path":"/Users/fairlyxu/Documents/08-workspace/03-out/denews/baca_app/babel.config.js","mtime":1639051781000},{"path":"/Users/fairlyxu/Documents/08-workspace/03-out/denews/baca_app/node_modules/cache-loader/dist/cjs.js","mtime":1638964486000},{"path":"/Users/fairlyxu/Documents/08-workspace/03-out/denews/baca_app/node_modules/babel-loader/lib/index.js","mtime":1638964486000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9mYWlybHl4dS9Eb2N1bWVudHMvMDgtd29ya3NwYWNlLzAzLW91dC9kZW5ld3MvYmFjYV9hcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IuanMiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmpzb24uc3RyaW5naWZ5LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCB7IEFwaVByb21pc2UsIFdzUHJvdmlkZXIgfSBmcm9tICdAcG9sa2Fkb3QvYXBpJzsKaW1wb3J0IHsgd2ViM0FjY291bnRzLCB3ZWIzRW5hYmxlLCB3ZWIzRnJvbVNvdXJjZSwgd2ViM0Zyb21BZGRyZXNzIH0gZnJvbSAnQHBvbGthZG90L2V4dGVuc2lvbi1kYXBwJzsKdmFyIGF3c0NoYWluQWRkciA9ICd3czovL2VjMi0zNS03Ny0xNC02NC5hcC1ub3J0aGVhc3QtMS5jb21wdXRlLmFtYXpvbmF3cy5jb206OTk0NCc7CnZhciBsb2NhbENoYWluQWRkciA9ICd3czovLzEyNy4wLjAuMTo5OTQ0JzsKdmFyIGF3c0JhY2tlbmQgPSAnaHR0cDovL2VjMi0zNS03Ny0xNC02NC5hcC1ub3J0aGVhc3QtMS5jb21wdXRlLmFtYXpvbmF3cy5jb206MzAwMCc7CnZhciBsb2NhbEJhY2tlbmQgPSAnaHR0cDovLzEyNy4wLjAuMTozMDAwJzsKdmFyIGFkbWluQWRkciA9ICc1RVJhMVNSY3h6aVZiQldieFJWdHM2bnp6clI0eUNVTHBRdWdEaFhRdVFqcmVXRkMnOwp2YXIgYWN0aW5nQWRkcmVzcyA9IGF3c0NoYWluQWRkcjsKdmFyIHVuaXQgPSAxMDAwMDAwMDAwMDAwMDA7CnZhciB0ZXN0X2FkZHIgPSAiNUhDRUFVWkZ2S3lzOThkWWFvTkRMUldEenFoOFdLb2d6Y0ozV0VTN29HeHk3bmZUIjsKCmZ1bmN0aW9uIHN0YWtlUmVzdWx0SGFuZGxlcihzdGF0dXMpIHsKICBjb25zb2xlLmxvZyhzdGF0dXMpOwogIHJldHVybiAiIjsKfSAvL3RyYW5zZmVyCgoKZnVuY3Rpb24gaGFuZGxlU3Rha2UoX3gpIHsKICByZXR1cm4gX2hhbmRsZVN0YWtlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7Cn0KCmZ1bmN0aW9uIF9oYW5kbGVTdGFrZSgpIHsKICBfaGFuZGxlU3Rha2UgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUocGFyYW1zKSB7CiAgICB2YXIgYmFsLCBhbW1vdW50LCBTRU5ERVIsIHdzUHJvdmlkZXIsIGFwaSwgZXh0ZW5zaW9ucywgaW5qZWN0b3IsIHR4SGFzaDsKICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICB3aGlsZSAoMSkgewogICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgYmFsID0gcGFyYW1zLndhbGxldF9pZDsKICAgICAgICAgICAgYW1tb3VudCA9IHBhcmFtcy5zdGFrZV9hbW1vdW50OyAvLzEKCiAgICAgICAgICAgIFNFTkRFUiA9IGJhbDsgLy8gZmluZHMgYW4gaW5qZWN0b3IgZm9yIGFuIGFkZHJlc3MKCiAgICAgICAgICAgIHdzUHJvdmlkZXIgPSBuZXcgV3NQcm92aWRlcihhY3RpbmdBZGRyZXNzKTsKICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDY7CiAgICAgICAgICAgIHJldHVybiBBcGlQcm9taXNlLmNyZWF0ZSh7CiAgICAgICAgICAgICAgcHJvdmlkZXI6IHdzUHJvdmlkZXIKICAgICAgICAgICAgfSk7CgogICAgICAgICAgY2FzZSA2OgogICAgICAgICAgICBhcGkgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gOTsKICAgICAgICAgICAgcmV0dXJuIHdlYjNFbmFibGUoJ0JBQ0EnKTsKCiAgICAgICAgICBjYXNlIDk6CiAgICAgICAgICAgIGV4dGVuc2lvbnMgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTI7CiAgICAgICAgICAgIHJldHVybiB3ZWIzRnJvbUFkZHJlc3MoU0VOREVSKTsKCiAgICAgICAgICBjYXNlIDEyOgogICAgICAgICAgICBpbmplY3RvciA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxNTsKICAgICAgICAgICAgcmV0dXJuIGFwaS50eC5iYWxhbmNlcy50cmFuc2ZlcihhZG1pbkFkZHIsIGFtbW91bnQpLnNpZ25BbmRTZW5kKFNFTkRFUiwgewogICAgICAgICAgICAgIHNpZ25lcjogaW5qZWN0b3Iuc2lnbmVyCiAgICAgICAgICAgIH0pOwoKICAgICAgICAgIGNhc2UgMTU6CiAgICAgICAgICAgIHR4SGFzaCA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgIC8vIFNob3cgdGhlIGhhc2gKICAgICAgICAgICAgY29uc29sZS5sb2coIlN1Ym1pdHRlZCB3aXRoIGhhc2ggIi5jb25jYXQodHhIYXNoKSk7CiAgICAgICAgICAgIC8qCiAgICAgICAgICAgIC8vIHVuYmxvY2sgCiAgICAgICAgICAgIGFwaS50eC5iYWxhbmNlcwogICAgICAgICAgICAgLnRyYW5zZmVyKGFkbWluQWRkciwgIGFtbW91bnQpCiAgICAgICAgICAgICAuc2lnbkFuZFNlbmQoU0VOREVSLHsgc2lnbmVyOiBpbmplY3Rvci5zaWduZXIgfSk7IAogICAgICAgICAgICAvLyBzZXRVbnN1YigoKSA9PiB1bnN1Yik7Ki8KCiAgICAgICAgICBjYXNlIDE3OgogICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sIF9jYWxsZWUpOwogIH0pKTsKICByZXR1cm4gX2hhbmRsZVN0YWtlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7Cn0KCmZ1bmN0aW9uIGdldFJld2FyZCgpIHsKICB2YXIgcmIgPSBKU09OLnN0cmluZ2lmeSh7CiAgICAiYWRkciI6IHRlc3RfYWRkcgogIH0pOwogIHZhciBiYWNrZW5kYXBpID0gYXdzQmFja2VuZDsKICB2YXIgdXJsID0gIiIuY29uY2F0KGJhY2tlbmRhcGksICIvYXBpL2dldF9yZXdhcmQiKTsKICBjb25zb2xlLmxvZyh1cmwpOwogIGZldGNoKHVybCwgewogICAgYm9keTogcmIsCiAgICBoZWFkZXJzOiB7CiAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicKICAgIH0sCiAgICBtZXRob2Q6ICdQT1NUJwogIH0pLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICByZXR1cm4gcmVzcG9uc2UuanNvbigpOwogIH0pLnRoZW4oZnVuY3Rpb24gKGEpIHsKICAgIHJldHVybiBjb25zb2xlLmxvZyhhKTsKICB9KTsKfSAvL2dldFJld2FyZCgpCgoKZXhwb3J0IGRlZmF1bHQgaGFuZGxlU3Rha2UgPSBoYW5kbGVTdGFrZTs="},{"version":3,"sources":["/Users/fairlyxu/Documents/08-workspace/03-out/denews/baca_app/src/utils/handleStake.js"],"names":["ApiPromise","WsProvider","web3Accounts","web3Enable","web3FromSource","web3FromAddress","awsChainAddr","localChainAddr","awsBackend","localBackend","adminAddr","actingAddress","unit","test_addr","stakeResultHandler","status","console","log","handleStake","params","bal","wallet_id","ammount","stake_ammount","SENDER","wsProvider","create","provider","api","extensions","injector","tx","balances","transfer","signAndSend","signer","txHash","getReward","rb","JSON","stringify","backendapi","url","fetch","body","headers","method","then","response","json","a"],"mappings":";;;;AAAA,SAASA,UAAT,EAAqBC,UAArB,QAAuC,eAAvC;AACA,SAASC,YAAT,EAAuBC,UAAvB,EAAmCC,cAAnC,EAAmDC,eAAnD,QAA0E,0BAA1E;AAEA,IAAMC,YAAY,GAAG,gEAArB;AACA,IAAMC,cAAc,GAAG,qBAAvB;AACA,IAAMC,UAAU,GAAG,kEAAnB;AACA,IAAMC,YAAY,GAAG,uBAArB;AACA,IAAMC,SAAS,GAAG,kDAAlB;AAGA,IAAMC,aAAa,GAAGL,YAAtB;AACA,IAAMM,IAAI,GAAG,eAAb;AACA,IAAMC,SAAS,GAAG,kDAAlB;;AAIA,SAASC,kBAAT,CAA4BC,MAA5B,EAAmC;AAC/BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,SAAO,EAAP;AACH,C,CAED;;;SACeG,W;;;;;yEAAf,iBAA2BC,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AACQC,YAAAA,GADR,GACcD,MAAM,CAACE,SADrB;AAGQC,YAAAA,OAHR,GAGmBH,MAAM,CAACI,aAH1B,EAGyC;;AAC/BC,YAAAA,MAJV,GAImBJ,GAJnB,EAMI;;AACMK,YAAAA,UAPV,GAOuB,IAAIxB,UAAJ,CAAeU,aAAf,CAPvB;AAAA;AAAA,mBAQsBX,UAAU,CAAC0B,MAAX,CAAkB;AAAEC,cAAAA,QAAQ,EAAEF;AAAZ,aAAlB,CARtB;;AAAA;AAQUG,YAAAA,GARV;AAAA;AAAA,mBAU6BzB,UAAU,CAAC,MAAD,CAVvC;;AAAA;AAUU0B,YAAAA,UAVV;AAAA;AAAA,mBAW2BxB,eAAe,CAACmB,MAAD,CAX1C;;AAAA;AAWUM,YAAAA,QAXV;AAAA;AAAA,mBAeyBF,GAAG,CAACG,EAAJ,CAAOC,QAAP,CAClBC,QADkB,CACTvB,SADS,EACGY,OADH,EAElBY,WAFkB,CAENV,MAFM,EAEC;AAAEW,cAAAA,MAAM,EAAEL,QAAQ,CAACK;AAAnB,aAFD,CAfzB;;AAAA;AAeUC,YAAAA,MAfV;AAmBI;AACApB,YAAAA,OAAO,CAACC,GAAR,+BAAmCmB,MAAnC;AAEC;AACL;AACA;AACA;AACA;AACA;;AA3BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AA+BA,SAASC,SAAT,GAAqB;AACjB,MAAIC,EAAE,GAAGC,IAAI,CAACC,SAAL,CAAe;AAAE,YAAQ3B;AAAV,GAAf,CAAT;AACA,MAAI4B,UAAU,GAAGjC,UAAjB;AACA,MAAMkC,GAAG,aAAMD,UAAN,oBAAT;AACAzB,EAAAA,OAAO,CAACC,GAAR,CAAYyB,GAAZ;AACAC,EAAAA,KAAK,CAACD,GAAD,EAAM;AACHE,IAAAA,IAAI,EAAEN,EADH;AAEHO,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX,KAFN;AAKHC,IAAAA,MAAM,EAAE;AALL,GAAN,CAAL,CAOKC,IAPL,CAOU,UAACC,QAAD;AAAA,WAAcA,QAAQ,CAACC,IAAT,EAAd;AAAA,GAPV,EAQKF,IARL,CAQU,UAAAG,CAAC;AAAA,WAAIlC,OAAO,CAACC,GAAR,CAAYiC,CAAZ,CAAJ;AAAA,GARX;AASH,C,CAED;;;AAIA,eAAehC,WAAW,GAACA,WAA3B","sourcesContent":["import { ApiPromise, WsProvider } from '@polkadot/api';\nimport { web3Accounts, web3Enable, web3FromSource, web3FromAddress } from '@polkadot/extension-dapp';\n\nconst awsChainAddr = 'ws://ec2-35-77-14-64.ap-northeast-1.compute.amazonaws.com:9944'\nconst localChainAddr = 'ws://127.0.0.1:9944'\nconst awsBackend = 'http://ec2-35-77-14-64.ap-northeast-1.compute.amazonaws.com:3000'\nconst localBackend = 'http://127.0.0.1:3000'\nconst adminAddr = '5ERa1SRcxziVbBWbxRVts6nzzrR4yCULpQugDhXQuQjreWFC'\n\n\nconst actingAddress = awsChainAddr\nconst unit = 100000000000000;\nconst test_addr = \"5HCEAUZFvKys98dYaoNDLRWDzqh8WKogzcJ3WES7oGxy7nfT\" \n\n \n\nfunction stakeResultHandler(status){\n    console.log(status)\n    return \"\"\n}\n\n//transfer\nasync function handleStake(params) {\n    let bal = params.wallet_id\n    \n    let ammount =  params.stake_ammount  //1\n    const SENDER = bal; \n\n    // finds an injector for an address\n    const wsProvider = new WsProvider(actingAddress); \n    const api = await ApiPromise.create({ provider: wsProvider });\n    \n    const extensions = await web3Enable('BACA'); \n    const injector = await web3FromAddress(SENDER); \n\n     \n    // block \n    const txHash = await api.tx.balances\n      .transfer(adminAddr,  ammount)\n      .signAndSend(SENDER,{ signer: injector.signer });\n\n    // Show the hash\n    console.log(`Submitted with hash ${txHash}`); \n\n     /*\n     // unblock \n    api.tx.balances\n      .transfer(adminAddr,  ammount)\n      .signAndSend(SENDER,{ signer: injector.signer }); \n\n    // setUnsub(() => unsub);*/\n} \n\nfunction getReward() {  \n    let rb = JSON.stringify({ \"addr\": test_addr })\n    let backendapi = awsBackend\n    const url = `${backendapi}/api/get_reward`\n    console.log(url)\n    fetch(url, {\n            body: rb,\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            method: 'POST',\n        })\n        .then((response) => response.json())\n        .then(a => console.log(a))\n}\n\n//getReward()\n\n \n \nexport default handleStake=handleStake;\n\n\n"]}]}