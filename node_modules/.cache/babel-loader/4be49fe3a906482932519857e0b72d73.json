{"remainingRequest":"/Users/fairlyxu/Documents/08-workspace/07-web3/bacalab/baca_app/node_modules/babel-loader/lib/index.js!/Users/fairlyxu/Documents/08-workspace/07-web3/bacalab/baca_app/src/utils/handleStake.js","dependencies":[{"path":"/Users/fairlyxu/Documents/08-workspace/07-web3/bacalab/baca_app/src/utils/handleStake.js","mtime":1639283730000},{"path":"/Users/fairlyxu/Documents/08-workspace/07-web3/bacalab/baca_app/babel.config.js","mtime":1639051781000},{"path":"/Users/fairlyxu/Documents/08-workspace/07-web3/bacalab/baca_app/node_modules/cache-loader/dist/cjs.js","mtime":1638964486000},{"path":"/Users/fairlyxu/Documents/08-workspace/07-web3/bacalab/baca_app/node_modules/babel-loader/lib/index.js","mtime":1638964486000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9mYWlybHl4dS9Eb2N1bWVudHMvMDgtd29ya3NwYWNlLzA3LXdlYjMvYmFjYWxhYi9iYWNhX2FwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvci5qcyI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuanNvbi5zdHJpbmdpZnkuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nLmpzIjsKaW1wb3J0IHsgQXBpUHJvbWlzZSwgV3NQcm92aWRlciB9IGZyb20gJ0Bwb2xrYWRvdC9hcGknOwppbXBvcnQgeyB3ZWIzQWNjb3VudHMsIHdlYjNFbmFibGUsIHdlYjNGcm9tU291cmNlLCB3ZWIzRnJvbUFkZHJlc3MgfSBmcm9tICdAcG9sa2Fkb3QvZXh0ZW5zaW9uLWRhcHAnOwp2YXIgYXdzQ2hhaW5BZGRyID0gJ3dzOi8vZWMyLTM1LTc3LTE0LTY0LmFwLW5vcnRoZWFzdC0xLmNvbXB1dGUuYW1hem9uYXdzLmNvbTo5OTQ0JzsKdmFyIGxvY2FsQ2hhaW5BZGRyID0gJ3dzOi8vMTI3LjAuMC4xOjk5NDQnOwp2YXIgYXdzQmFja2VuZCA9ICdodHRwOi8vZWMyLTM1LTc3LTE0LTY0LmFwLW5vcnRoZWFzdC0xLmNvbXB1dGUuYW1hem9uYXdzLmNvbTozMDAwJzsKdmFyIGxvY2FsQmFja2VuZCA9ICdodHRwOi8vMTI3LjAuMC4xOjMwMDAnOwp2YXIgYWRtaW5BZGRyID0gJzVFUmExU1JjeHppVmJCV2J4UlZ0czZuenpyUjR5Q1VMcFF1Z0RoWFF1UWpyZVdGQyc7CnZhciBhY3RpbmdBZGRyZXNzID0gYXdzQ2hhaW5BZGRyOwp2YXIgdW5pdCA9IDEwMDAwMDAwMDAwMDAwMDsKdmFyIHRlc3RfYWRkciA9ICI1SENFQVVaRnZLeXM5OGRZYW9ORExSV0R6cWg4V0tvZ3pjSjNXRVM3b0d4eTduZlQiOwoKZnVuY3Rpb24gc3Rha2VSZXN1bHRIYW5kbGVyKHN0YXR1cykgewogIGNvbnNvbGUubG9nKHN0YXR1cyk7CiAgcmV0dXJuICIiOwp9IC8vdHJhbnNmZXIKCgpmdW5jdGlvbiBoYW5kbGVTdGFrZShfeCkgewogIHJldHVybiBfaGFuZGxlU3Rha2UuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKfQoKZnVuY3Rpb24gX2hhbmRsZVN0YWtlKCkgewogIF9oYW5kbGVTdGFrZSA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZShwYXJhbXMpIHsKICAgIHZhciBiYWwsIGFtbW91bnQsIFNFTkRFUiwgd3NQcm92aWRlciwgYXBpLCBleHRlbnNpb25zLCBpbmplY3RvciwgdHhIYXNoOwogICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICBiYWwgPSBwYXJhbXMud2FsbGV0X2lkOwogICAgICAgICAgICBhbW1vdW50ID0gcGFyYW1zLnN0YWtlX2FtbW91bnQ7IC8vMQoKICAgICAgICAgICAgU0VOREVSID0gYmFsOyAvLyBmaW5kcyBhbiBpbmplY3RvciBmb3IgYW4gYWRkcmVzcwoKICAgICAgICAgICAgd3NQcm92aWRlciA9IG5ldyBXc1Byb3ZpZGVyKGFjdGluZ0FkZHJlc3MpOwogICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNjsKICAgICAgICAgICAgcmV0dXJuIEFwaVByb21pc2UuY3JlYXRlKHsKICAgICAgICAgICAgICBwcm92aWRlcjogd3NQcm92aWRlcgogICAgICAgICAgICB9KTsKCiAgICAgICAgICBjYXNlIDY6CiAgICAgICAgICAgIGFwaSA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA5OwogICAgICAgICAgICByZXR1cm4gd2ViM0VuYWJsZSgnQkFDQScpOwoKICAgICAgICAgIGNhc2UgOToKICAgICAgICAgICAgZXh0ZW5zaW9ucyA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxMjsKICAgICAgICAgICAgcmV0dXJuIHdlYjNGcm9tQWRkcmVzcyhTRU5ERVIpOwoKICAgICAgICAgIGNhc2UgMTI6CiAgICAgICAgICAgIGluamVjdG9yID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDE1OwogICAgICAgICAgICByZXR1cm4gYXBpLnR4LmJhbGFuY2VzLnRyYW5zZmVyKGFkbWluQWRkciwgYW1tb3VudCkuc2lnbkFuZFNlbmQoU0VOREVSLCB7CiAgICAgICAgICAgICAgc2lnbmVyOiBpbmplY3Rvci5zaWduZXIKICAgICAgICAgICAgfSk7CgogICAgICAgICAgY2FzZSAxNToKICAgICAgICAgICAgdHhIYXNoID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgLy8gU2hvdyB0aGUgaGFzaAogICAgICAgICAgICBjb25zb2xlLmxvZygiU3VibWl0dGVkIHdpdGggaGFzaCAiLmNvbmNhdCh0eEhhc2gpKTsKICAgICAgICAgICAgLyoKICAgICAgICAgICAgLy8gdW5ibG9jayAKICAgICAgICAgICAgYXBpLnR4LmJhbGFuY2VzCiAgICAgICAgICAgICAudHJhbnNmZXIoYWRtaW5BZGRyLCAgYW1tb3VudCkKICAgICAgICAgICAgIC5zaWduQW5kU2VuZChTRU5ERVIseyBzaWduZXI6IGluamVjdG9yLnNpZ25lciB9KTsgCiAgICAgICAgICAgIC8vIHNldFVuc3ViKCgpID0+IHVuc3ViKTsqLwoKICAgICAgICAgIGNhc2UgMTc6CiAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgIH0KICAgICAgfQogICAgfSwgX2NhbGxlZSk7CiAgfSkpOwogIHJldHVybiBfaGFuZGxlU3Rha2UuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKfQoKZnVuY3Rpb24gZ2V0UmV3YXJkKCkgewogIHZhciByYiA9IEpTT04uc3RyaW5naWZ5KHsKICAgICJhZGRyIjogdGVzdF9hZGRyCiAgfSk7CiAgdmFyIGJhY2tlbmRhcGkgPSBhd3NCYWNrZW5kOwogIHZhciB1cmwgPSAiIi5jb25jYXQoYmFja2VuZGFwaSwgIi9hcGkvZ2V0X3Jld2FyZCIpOwogIGNvbnNvbGUubG9nKHVybCk7CiAgZmV0Y2godXJsLCB7CiAgICBib2R5OiByYiwKICAgIGhlYWRlcnM6IHsKICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJwogICAgfSwKICAgIG1ldGhvZDogJ1BPU1QnCiAgfSkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgIHJldHVybiByZXNwb25zZS5qc29uKCk7CiAgfSkudGhlbihmdW5jdGlvbiAoYSkgewogICAgcmV0dXJuIGNvbnNvbGUubG9nKGEpOwogIH0pOwp9IC8vZ2V0UmV3YXJkKCkKCgpleHBvcnQgZGVmYXVsdCBoYW5kbGVTdGFrZSA9IGhhbmRsZVN0YWtlOw=="},{"version":3,"sources":["/Users/fairlyxu/Documents/08-workspace/07-web3/bacalab/baca_app/src/utils/handleStake.js"],"names":["ApiPromise","WsProvider","web3Accounts","web3Enable","web3FromSource","web3FromAddress","awsChainAddr","localChainAddr","awsBackend","localBackend","adminAddr","actingAddress","unit","test_addr","stakeResultHandler","status","console","log","handleStake","params","bal","wallet_id","ammount","stake_ammount","SENDER","wsProvider","create","provider","api","extensions","injector","tx","balances","transfer","signAndSend","signer","txHash","getReward","rb","JSON","stringify","backendapi","url","fetch","body","headers","method","then","response","json","a"],"mappings":";;;;AAAA,SAASA,UAAT,EAAqBC,UAArB,QAAuC,eAAvC;AACA,SAASC,YAAT,EAAuBC,UAAvB,EAAmCC,cAAnC,EAAmDC,eAAnD,QAA0E,0BAA1E;AAEA,IAAMC,YAAY,GAAG,gEAArB;AACA,IAAMC,cAAc,GAAG,qBAAvB;AACA,IAAMC,UAAU,GAAG,kEAAnB;AACA,IAAMC,YAAY,GAAG,uBAArB;AACA,IAAMC,SAAS,GAAG,kDAAlB;AAGA,IAAMC,aAAa,GAAGL,YAAtB;AACA,IAAMM,IAAI,GAAG,eAAb;AACA,IAAMC,SAAS,GAAG,kDAAlB;;AAIA,SAASC,kBAAT,CAA4BC,MAA5B,EAAmC;AAC/BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,SAAO,EAAP;AACH,C,CAED;;;SACeG,W;;;;;yEAAf,iBAA2BC,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AACQC,YAAAA,GADR,GACcD,MAAM,CAACE,SADrB;AAGQC,YAAAA,OAHR,GAGmBH,MAAM,CAACI,aAH1B,EAGyC;;AAC/BC,YAAAA,MAJV,GAImBJ,GAJnB,EAMI;;AACMK,YAAAA,UAPV,GAOuB,IAAIxB,UAAJ,CAAeU,aAAf,CAPvB;AAAA;AAAA,mBAQsBX,UAAU,CAAC0B,MAAX,CAAkB;AAAEC,cAAAA,QAAQ,EAAEF;AAAZ,aAAlB,CARtB;;AAAA;AAQUG,YAAAA,GARV;AAAA;AAAA,mBAU6BzB,UAAU,CAAC,MAAD,CAVvC;;AAAA;AAUU0B,YAAAA,UAVV;AAAA;AAAA,mBAW2BxB,eAAe,CAACmB,MAAD,CAX1C;;AAAA;AAWUM,YAAAA,QAXV;AAAA;AAAA,mBAeyBF,GAAG,CAACG,EAAJ,CAAOC,QAAP,CAClBC,QADkB,CACTvB,SADS,EACGY,OADH,EAElBY,WAFkB,CAENV,MAFM,EAEC;AAAEW,cAAAA,MAAM,EAAEL,QAAQ,CAACK;AAAnB,aAFD,CAfzB;;AAAA;AAeUC,YAAAA,MAfV;AAmBI;AACApB,YAAAA,OAAO,CAACC,GAAR,+BAAmCmB,MAAnC;AAEC;AACL;AACA;AACA;AACA;AACA;;AA3BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AA+BA,SAASC,SAAT,GAAqB;AACjB,MAAIC,EAAE,GAAGC,IAAI,CAACC,SAAL,CAAe;AAAE,YAAQ3B;AAAV,GAAf,CAAT;AACA,MAAI4B,UAAU,GAAGjC,UAAjB;AACA,MAAMkC,GAAG,aAAMD,UAAN,oBAAT;AACAzB,EAAAA,OAAO,CAACC,GAAR,CAAYyB,GAAZ;AACAC,EAAAA,KAAK,CAACD,GAAD,EAAM;AACHE,IAAAA,IAAI,EAAEN,EADH;AAEHO,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX,KAFN;AAKHC,IAAAA,MAAM,EAAE;AALL,GAAN,CAAL,CAOKC,IAPL,CAOU,UAACC,QAAD;AAAA,WAAcA,QAAQ,CAACC,IAAT,EAAd;AAAA,GAPV,EAQKF,IARL,CAQU,UAAAG,CAAC;AAAA,WAAIlC,OAAO,CAACC,GAAR,CAAYiC,CAAZ,CAAJ;AAAA,GARX;AASH,C,CAED;;;AAIA,eAAehC,WAAW,GAACA,WAA3B","sourcesContent":["import { ApiPromise, WsProvider } from '@polkadot/api';\nimport { web3Accounts, web3Enable, web3FromSource, web3FromAddress } from '@polkadot/extension-dapp';\n\nconst awsChainAddr = 'ws://ec2-35-77-14-64.ap-northeast-1.compute.amazonaws.com:9944'\nconst localChainAddr = 'ws://127.0.0.1:9944'\nconst awsBackend = 'http://ec2-35-77-14-64.ap-northeast-1.compute.amazonaws.com:3000'\nconst localBackend = 'http://127.0.0.1:3000'\nconst adminAddr = '5ERa1SRcxziVbBWbxRVts6nzzrR4yCULpQugDhXQuQjreWFC'\n\n\nconst actingAddress = awsChainAddr\nconst unit = 100000000000000;\nconst test_addr = \"5HCEAUZFvKys98dYaoNDLRWDzqh8WKogzcJ3WES7oGxy7nfT\" \n\n \n\nfunction stakeResultHandler(status){\n    console.log(status)\n    return \"\"\n}\n\n//transfer\nasync function handleStake(params) {\n    let bal = params.wallet_id\n    \n    let ammount =  params.stake_ammount  //1\n    const SENDER = bal; \n\n    // finds an injector for an address\n    const wsProvider = new WsProvider(actingAddress); \n    const api = await ApiPromise.create({ provider: wsProvider });\n    \n    const extensions = await web3Enable('BACA'); \n    const injector = await web3FromAddress(SENDER); \n\n     \n    // block \n    const txHash = await api.tx.balances\n      .transfer(adminAddr,  ammount)\n      .signAndSend(SENDER,{ signer: injector.signer });\n\n    // Show the hash\n    console.log(`Submitted with hash ${txHash}`); \n\n     /*\n     // unblock \n    api.tx.balances\n      .transfer(adminAddr,  ammount)\n      .signAndSend(SENDER,{ signer: injector.signer }); \n\n    // setUnsub(() => unsub);*/\n} \n\nfunction getReward() {  \n    let rb = JSON.stringify({ \"addr\": test_addr })\n    let backendapi = awsBackend\n    const url = `${backendapi}/api/get_reward`\n    console.log(url)\n    fetch(url, {\n            body: rb,\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            method: 'POST',\n        })\n        .then((response) => response.json())\n        .then(a => console.log(a))\n}\n\n//getReward()\n\n \n \nexport default handleStake=handleStake;\n\n\n"]}]}